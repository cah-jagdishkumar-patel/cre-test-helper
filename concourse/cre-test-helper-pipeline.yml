artifacts-creds: &artifacts-creds
  username: ((artifacts.username))
  password: ((artifacts.password))
slack-channel: &slack-channel
  channel: #gpj-deploys
prod-slack-channel: &prod-slack-channel
  channel: #connect-deployment
resource_types:
- name: slack-notification
  type: registry-image
  source:
    tag: latest
    <<: *artifacts-creds
    repository: artifacts.cahcommtech.com/cfcommunity/slack-notification-resource
- name: meta
  type: registry-image
  source:
    <<: *artifacts-creds
    repository: artifacts.cahcommtech.com/swce/metadata-resource
- name: pull-request
  type: registry-image
  source:
    <<: *artifacts-creds
    repository: artifacts.cahcommtech.com/fuse/pr
- name: maven-resource
  type: registry-image
  source:
    <<: *artifacts-creds
    repository: artifacts.cahcommtech.com/maven-resource
resources:
- name: meta
  type: meta
  source:
- name: source
  type: git
  icon: git
  check_every: 5m
  source:
    uri: git@github.com:cahcommercial/cre-test-helper
    private_key: ((deploy-keys.cre-test-helper))
    branch: main
- name: nexus
  type: maven-resource
  icon: source-repository
  check_every: 5m
  source:
    url: https://artifacts.cahcommtech.com/repository/commtech-internal/
    artifact: com.cardinalhealth.outcomes.cre:cre-test-helper:jar
    <<: *artifacts-creds
- name: version-snapshot
  type: git
  icon: numeric
  check_every: 5m
  source:
    uri: git@github.com:cahcommercial/cre-test-helper.git
    branch: version
    private_key: ((deploy-keys.cre-test-helper))
- name: week-day-morning
  type: time
  icon: clock-outline
  check_every: 60m
  source:
    start: 7:00 AM
    stop: 8:30 AM
    location: America/Chicago
    days: [Monday, Tuesday, Wednesday, Thursday, Friday]
- name: tools
  type: git
  version:
    ref: 84799ce4e341fe820297c11fe47698c24854ee4f
  icon: git
  check_every: 5m
  source:
    uri: git@github.com:cahcommercial/outcomes-pipeline-tools
    branch: master
    private_key: ((deploy-keys.connect-sidecar-tools))
- name: pr
  type: pull-request
  icon: source-pull
  check_every: 5m
  source:
    repo: cahcommercial/cre-test-helper
    access_token: ((concourse-github-access-token))
    base: main
- name: nexus-snapshot
  type: maven-resource
  icon: source-repository
  check_every: 5m
  source:
    snapshot_url: https://artifacts.cahcommtech.com/repository/commtech-internal-snapshots/
    artifact: com.cardinalhealth.outcomes.cre:cre-test-helper:jar
    debug: true
    <<: *artifacts-creds
- name: slack-alert
  type: slack-notification
  icon: slack
  source:
    url: ((connect-deploy-slack-webhook-url))
- name: version
  type: git
  icon: numeric
  check_every: 5m
  source:
    uri: git@github.com:cahcommercial/cre-test-helper.git
    branch: version
    private_key: ((deploy-keys.cre-test-helper))
- name: version-fluffle
  type: git
  icon: numeric
  check_every: 30m
  source:
    paths: [fluffle]
    uri: git@github.com:cahcommercial/cre-test-helper.git
    private_key: ((deploy-keys.cre-test-helper))
    branch: version
- name: version-stage
  type: git
  icon: numeric
  check_every: 30m
  source:
    paths: [stage]
    uri: git@github.com:cahcommercial/cre-test-helper.git
    private_key: ((deploy-keys.cre-test-helper))
    branch: version
- name: version-stage-phi
  type: git
  icon: numeric
  check_every: 30m
  source:
    paths: [stage-phi]
    uri: git@github.com:cahcommercial/cre-test-helper.git
    private_key: ((deploy-keys.cre-test-helper))
    branch: version
- name: version-prod
  type: git
  icon: numeric
  check_every: 30m
  source:
    paths: [prod]
    uri: git@github.com:cahcommercial/cre-test-helper.git
    private_key: ((deploy-keys.cre-test-helper))
    branch: version
groups:
- name: development
  jobs:
  - display-pipeline-version
  - deploy-to-fluffle
  - main-build
  - test-pr
- name: deploy
  jobs:
  - deploy-to-stage
  - deploy-to-stage-phi
  - deploy-to-prod
- name: promote
  jobs:
  - promote
jobs:
- name: display-pipeline-version
  plan:
    - task: display-version
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: ((artifacts.url))/busybox
            <<: *artifacts-creds
        run:
          path: echo
          args:  [ Generated using https://github.com/cahcommercial/outcomes-pipeline-tools commit 84799ce4e341fe820297c11fe47698c24854ee4f ]
- name: deploy-to-fluffle
  plan:
    - get: source
      trigger: true
      passed: [main-build]
    - get: week-day-morning
      trigger: true
    - get: tools
    - get: version-fluffle
      trigger: true
    - task: nexus_download
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            tag: latest
            username: ((artifacts.username))
            password: ((artifacts.password))
            repository: artifacts.cahcommtech.com/pipeline-tools17
        params:
          VERSION_FILE:
          NAME:
          ARTIFACT_EXTENSION:
          GROUP_ID: com.cardinalhealth.connect
          NEXUS_USERNAME: ((artifacts.username))
          NEXUS_PASSWORD: ((artifacts.password))
        run:
          path: tools/tasks/nexus_download.sh
        inputs:
        - name: tools
        - name: version
        outputs:
        - name: target
      params:
        VERSION_FILE: fluffle
        ARTIFACT_EXTENSION: jar
        GROUP_ID: com.cardinalhealth.outcomes.cre
        NAME: cre-test-helper
      input_mapping:
        version: version-fluffle
      output_mapping:
        target: target
    - task: parse_env_vars
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            tag: latest
            username: ((artifacts.username))
            password: ((artifacts.password))
            repository: artifacts.cahcommtech.com/pipeline-tools17
        params:
          ENV_VARS:
        run:
          path: tools/tasks/dynav.sh
        inputs:
        - name: tools
        outputs:
        - name: environment
      params:
        ENV_VARS: DEPLOY_AWS_ACCESS_KEY=((cre-test-helper.fluffle-aws-access-key)),DEPLOY_AWS_SECRET_KEY=((cre-test-helper.fluffle-aws-secret-key))
    - task: deploy
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            tag: latest
            username: ((artifacts.username))
            password: ((artifacts.password))
            repository: artifacts.cahcommtech.com/pipeline-tools17
        params:
          VERSION_FILE:
          BUILD_TYPE:
          CF_APIHOST:
          CF_HOST:
          CF_EXTERNAL_HOST:
          CF_USERNAME:
          CF_PASSWORD:
          CF_ORGANIZATION:
          CF_SPACE:
          CF_INSTANCES:
          CF_MEMORY:
          CF_SERVICES:
          ADD_HEALTHCHECK:
          NAME:
          APM_LOG_LEVEL:
        run:
          path: tools/tasks/deploy.sh
        inputs:
        - name: tools
        - name: target
        - name: version
        - name: environment
          optional: true
      params:
        VERSION_FILE: fluffle
        BUILD_TYPE: java
        CF_APIHOST: api.system.np1.fuseapps.io
        CF_HOST: apps.internal
        CF_EXTERNAL_HOST: apps.np1.fuseapps.io
        CF_USERNAME: ((pcf-np1.username))
        CF_PASSWORD: ((pcf-np1.password))
        CF_ORGANIZATION: clinical-rules-engine
        CF_SPACE: fluffle
        CF_INSTANCES: 1
        CF_MEMORY: 1G
        CF_SERVICES:
        ADD_HEALTHCHECK: false
        NAME: cre-test-helper
        APM_LOG_LEVEL: info
      input_mapping:
        target: target
        version: version-fluffle
- name: deploy-to-stage
  plan:
    - get: tools
    - get: version-stage
      trigger: true
    - put: slack-alert
      params:
        <<: *slack-channel
        text: "Deploying cre-test-helper to stage"
    - task: nexus_download
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            tag: latest
            username: ((artifacts.username))
            password: ((artifacts.password))
            repository: artifacts.cahcommtech.com/pipeline-tools17
        params:
          VERSION_FILE:
          NAME:
          ARTIFACT_EXTENSION:
          GROUP_ID: com.cardinalhealth.connect
          NEXUS_USERNAME: ((artifacts.username))
          NEXUS_PASSWORD: ((artifacts.password))
        run:
          path: tools/tasks/nexus_download.sh
        inputs:
        - name: tools
        - name: version
        outputs:
        - name: target
      params:
        VERSION_FILE: stage
        ARTIFACT_EXTENSION: jar
        GROUP_ID: com.cardinalhealth.outcomes.cre
        NAME: cre-test-helper
      input_mapping:
        version: version-stage
      output_mapping:
        target: target
    - task: parse_env_vars
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            tag: latest
            username: ((artifacts.username))
            password: ((artifacts.password))
            repository: artifacts.cahcommtech.com/pipeline-tools17
        params:
          ENV_VARS:
        run:
          path: tools/tasks/dynav.sh
        inputs:
        - name: tools
        outputs:
        - name: environment
      params:
        ENV_VARS: DEPLOY_AWS_ACCESS_KEY=((cre-test-helper.stage-aws-access-key)),DEPLOY_AWS_SECRET_KEY=((cre-test-helper.stage-aws-secret-key))
    - task: deploy
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            tag: latest
            username: ((artifacts.username))
            password: ((artifacts.password))
            repository: artifacts.cahcommtech.com/pipeline-tools17
        params:
          VERSION_FILE:
          BUILD_TYPE:
          CF_APIHOST:
          CF_HOST:
          CF_EXTERNAL_HOST:
          CF_USERNAME:
          CF_PASSWORD:
          CF_ORGANIZATION:
          CF_SPACE:
          CF_INSTANCES:
          CF_MEMORY:
          CF_SERVICES:
          ADD_HEALTHCHECK:
          NAME:
          APM_LOG_LEVEL:
        run:
          path: tools/tasks/deploy.sh
        inputs:
        - name: tools
        - name: target
        - name: version
        - name: environment
          optional: true
      params:
        VERSION_FILE: stage
        BUILD_TYPE: java
        CF_APIHOST: api.system.np1.fuseapps.io
        CF_HOST: apps.internal
        CF_EXTERNAL_HOST: apps.np1.fuseapps.io
        CF_USERNAME: ((pcf-np1.username))
        CF_PASSWORD: ((pcf-np1.password))
        CF_ORGANIZATION: clinical-rules-engine
        CF_SPACE: stage
        CF_INSTANCES: 1
        CF_MEMORY: 4g
        CF_SERVICES:
        ADD_HEALTHCHECK: false
        NAME: cre-test-helper
        APM_LOG_LEVEL: info
      input_mapping:
        target: target
        version: version-stage
    - put: slack-alert
      params:
        <<: *slack-channel
        text: "cre-test-helper stage deployment complete"
- name: deploy-to-stage-phi
  plan:
    - get: tools
    - get: version-stage-phi
      trigger: true
    - put: slack-alert
      params:
        <<: *slack-channel
        text: "Deploying cre-test-helper to stage-phi"
    - task: nexus_download
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            tag: latest
            username: ((artifacts.username))
            password: ((artifacts.password))
            repository: artifacts.cahcommtech.com/pipeline-tools17
        params:
          VERSION_FILE:
          NAME:
          ARTIFACT_EXTENSION:
          GROUP_ID: com.cardinalhealth.connect
          NEXUS_USERNAME: ((artifacts.username))
          NEXUS_PASSWORD: ((artifacts.password))
        run:
          path: tools/tasks/nexus_download.sh
        inputs:
        - name: tools
        - name: version
        outputs:
        - name: target
      params:
        VERSION_FILE: stage-phi
        ARTIFACT_EXTENSION: jar
        GROUP_ID: com.cardinalhealth.outcomes.cre
        NAME: cre-test-helper
      input_mapping:
        version: version-stage-phi
      output_mapping:
        target: target
    - task: parse_env_vars
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            tag: latest
            username: ((artifacts.username))
            password: ((artifacts.password))
            repository: artifacts.cahcommtech.com/pipeline-tools17
        params:
          ENV_VARS:
        run:
          path: tools/tasks/dynav.sh
        inputs:
        - name: tools
        outputs:
        - name: environment
      params:
        ENV_VARS: DEPLOY_AWS_ACCESS_KEY=((cre-test-helper.stage-phi-aws-access-key)),DEPLOY_AWS_SECRET_KEY=((cre-test-helper.stage-phi-aws-secret-key))
    - task: deploy
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            tag: latest
            username: ((artifacts.username))
            password: ((artifacts.password))
            repository: artifacts.cahcommtech.com/pipeline-tools17
        params:
          VERSION_FILE:
          BUILD_TYPE:
          CF_APIHOST:
          CF_HOST:
          CF_EXTERNAL_HOST:
          CF_USERNAME:
          CF_PASSWORD:
          CF_ORGANIZATION:
          CF_SPACE:
          CF_INSTANCES:
          CF_MEMORY:
          CF_SERVICES:
          ADD_HEALTHCHECK:
          NAME:
          APM_LOG_LEVEL:
        run:
          path: tools/tasks/deploy.sh
        inputs:
        - name: tools
        - name: target
        - name: version
        - name: environment
          optional: true
      params:
        VERSION_FILE: stage-phi
        BUILD_TYPE: java
        CF_APIHOST: api.system.fuseapps.io
        CF_HOST: apps.internal
        CF_EXTERNAL_HOST: apps.fuseapps.io
        CF_USERNAME: ((pcf-p1.username))
        CF_PASSWORD: ((pcf-p1.password))
        CF_ORGANIZATION: clinical-rules-engine
        CF_SPACE: stage-phi
        CF_INSTANCES: 2
        CF_MEMORY: 1G
        CF_SERVICES:
        ADD_HEALTHCHECK: false
        NAME: cre-test-helper
        APM_LOG_LEVEL: info
      input_mapping:
        target: target
        version: version-stage-phi
    - put: slack-alert
      params:
        <<: *slack-channel
        text: "cre-test-helper stage-phi deployment complete"
- name: deploy-to-prod
  plan:
    - get: tools
    - get: version-prod
      trigger: true
    - put: slack-alert
      params:
        <<: *slack-channel
        text: "Deploying cre-test-helper to prod"
    - task: nexus_download
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            tag: latest
            username: ((artifacts.username))
            password: ((artifacts.password))
            repository: artifacts.cahcommtech.com/pipeline-tools17
        params:
          VERSION_FILE:
          NAME:
          ARTIFACT_EXTENSION:
          GROUP_ID: com.cardinalhealth.connect
          NEXUS_USERNAME: ((artifacts.username))
          NEXUS_PASSWORD: ((artifacts.password))
        run:
          path: tools/tasks/nexus_download.sh
        inputs:
        - name: tools
        - name: version
        outputs:
        - name: target
      params:
        VERSION_FILE: prod
        ARTIFACT_EXTENSION: jar
        GROUP_ID: com.cardinalhealth.outcomes.cre
        NAME: cre-test-helper
      input_mapping:
        version: version-prod
      output_mapping:
        target: target
    - task: parse_env_vars
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            tag: latest
            username: ((artifacts.username))
            password: ((artifacts.password))
            repository: artifacts.cahcommtech.com/pipeline-tools17
        params:
          ENV_VARS:
        run:
          path: tools/tasks/dynav.sh
        inputs:
        - name: tools
        outputs:
        - name: environment
      params:
        ENV_VARS: DEPLOY_AWS_ACCESS_KEY=((cre-test-helper.prod-aws-access-key)),DEPLOY_AWS_SECRET_KEY=((cre-test-helper.prod-aws-secret-key))
    - task: deploy
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            tag: latest
            username: ((artifacts.username))
            password: ((artifacts.password))
            repository: artifacts.cahcommtech.com/pipeline-tools17
        params:
          VERSION_FILE:
          BUILD_TYPE:
          CF_APIHOST:
          CF_HOST:
          CF_EXTERNAL_HOST:
          CF_USERNAME:
          CF_PASSWORD:
          CF_ORGANIZATION:
          CF_SPACE:
          CF_INSTANCES:
          CF_MEMORY:
          CF_SERVICES:
          ADD_HEALTHCHECK:
          NAME:
          APM_LOG_LEVEL:
        run:
          path: tools/tasks/deploy.sh
        inputs:
        - name: tools
        - name: target
        - name: version
        - name: environment
          optional: true
      params:
        VERSION_FILE: prod
        BUILD_TYPE: java
        CF_APIHOST: api.system.fuseapps.io
        CF_HOST: apps.internal
        CF_EXTERNAL_HOST: apps.fuseapps.io
        CF_USERNAME: ((pcf-p1.username))
        CF_PASSWORD: ((pcf-p1.password))
        CF_ORGANIZATION: clinical-rules-engine
        CF_SPACE: prod
        CF_INSTANCES: 2
        CF_MEMORY: 1G
        CF_SERVICES:
        ADD_HEALTHCHECK: false
        NAME: cre-test-helper
        APM_LOG_LEVEL: info
      input_mapping:
        target: target
        version: version-prod
    - put: slack-alert
      params:
        <<: *slack-channel
        text: "cre-test-helper prod deployment complete"
- name: promote
  plan:
    - get: tools
    - get: version-snapshot
    - get: version-fluffle
    - get: source
    - get: meta
    - task: promote_snapshot
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            tag: latest
            username: ((artifacts.username))
            password: ((artifacts.password))
            repository: artifacts.cahcommtech.com/pipeline-tools17
        params:
          NAME:
          ARTIFACT_EXTENSION:
          GROUP_ID: com.cardinalhealth.connect
          NEXUS_USERNAME: ((artifacts.username))
          NEXUS_PASSWORD: ((artifacts.password))
        run:
          path: tools/tasks/promote.sh
        inputs:
        - name: tools
        - name: version-snapshot
        outputs:
        - name: target
        caches:
        - path: source/node_modules
        - path: tools/.mvn/.m2
      params:
        NAME: cre-test-helper
        ARTIFACT_EXTENSION: jar
        GROUP_ID: com.cardinalhealth.outcomes.cre
      output_mapping:
        target: target
    - put: nexus
      params:
        file: target/*.jar
        version_file: target/version-file
      on_failure:
        put: slack-alert
        params:
          <<: *slack-channel
          text: ":this_is_fine: cre-test-helper release push failed :this_is_fine:"
    - task: tag_release
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            tag: latest
            username: ((artifacts.username))
            password: ((artifacts.password))
            repository: artifacts.cahcommtech.com/pipeline-tools17
        params:
          TAG_WITH_V:
          BASE_BRANCH: master
        run:
          path: tools/tasks/tag-release.sh
        inputs:
        - name: tools
        - name: source
        - name: version-snapshot
        - name: target
        outputs:
        - name: tagRepo
      params:
        TAG_WITH_V: false
        BASE_BRANCH: main
      output_mapping:
        tagRepo: tagRepo
    - put: source
      params:
        repository: tagRepo
        only_tag: true
    - task: increment_snapshot
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            tag: latest
            username: ((artifacts.username))
            password: ((artifacts.password))
            repository: artifacts.cahcommtech.com/pipeline-tools17
        run:
          path: tools/tasks/increment.sh
        inputs:
        - name: tools
        - name: version-snapshot
        - name: version-fluffle
        outputs:
        - name: updatedRepo
      output_mapping:
        updatedRepo: updatedRepo
    - put: version-snapshot
      params:
        repository: updatedRepo
- name: main-build
  plan:
    - get: tools
    - get: version
    - get: meta
    - get: source
      trigger: true
    - task: run_tests
      privileged: true
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            tag: latest
            username: ((artifacts.username))
            password: ((artifacts.password))
            repository: artifacts.cahcommtech.com/pipeline-tools17
        params:
          BUILD_TYPE:
          GRADLE_BUILD:
          GRADLE_INTEGRATION_TESTS:
          DB_TYPE:
          NEEDS_DB:
          HAS_FLYWAY:
          NEEDS_CONNECT_DB:
          GIT_USERNAME:
          GIT_PASSWORD:
          GIT_REGISTRY_TOKEN:
          NEXUS_USERNAME: ((artifacts.username))
          NEXUS_PASSWORD: ((artifacts.password))
        run:
          path: tools/tasks/run_tests.sh
        inputs:
        - name: tools
        - name: meta
        - name: source
        - name: version
        container_limits:
          memory: 5368709120
        outputs:
        - name: package
        - name: test-output
        - name: pacts
      params:
        BUILD_TYPE: java
        GRADLE_BUILD: true
        GRADLE_INTEGRATION_TESTS: true
        NEEDS_DB: false
        DB_TYPE:
        HAS_FLYWAY: false
        NEEDS_CONNECT_DB: false
        NEEDS_LEGACY_DB: false
        NEXUS_USERNAME: ((artifacts.username))
        NEXUS_PASSWORD: ((artifacts.password))
        GIT_USERNAME: ((github.username))
        GIT_PASSWORD: ((github.password))
        GIT_REGISTRY_TOKEN: ((concourse-github-access-token))
        ADD_CYPRESS: false
      on_failure:
        put: slack-alert
        params:
          <<: *slack-channel
          text: ":party-vest: cre-test-helper main unit tests failed :party-vest:"
    - task: generate_snapshot_artifact
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            tag: latest
            username: ((artifacts.username))
            password: ((artifacts.password))
            repository: artifacts.cahcommtech.com/pipeline-tools17
        params:
          BUILD_TYPE:
          VERSION_FILE:
          PUBLISH_CONSUMER_PACTS:
        run:
          path: tools/tasks/publish.sh
        inputs:
        - name: tools
        - name: package
        - name: version
        - name: source
        outputs:
        - name: target
        caches:
        - path: source/node_modules
      params:
        BUILD_TYPE: java
        VERSION_FILE: snapshot
        PUBLISH_CONSUMER_PACTS: false
      input_mapping:
        package: package
      output_mapping:
        target: target
      on_failure:
        put: slack-alert
        params:
          <<: *slack-channel
          text: ":camera_with_flash: cre-test-helper generate snapshot artifact failed :camera_with_flash:"
    - put: nexus-snapshot
      params:
        file: target/*.jar
        version_file: version/snapshot
      on_failure:
        put: slack-alert
        params:
          <<: *slack-channel
          text: ":thanos_snap: cre-test-helper snapshot push failed :thanos_snap:"
          attachments:
          - color: "#bc091e"
            text: ":alert_shiny:"
- name: test-pr
  plan:
    - get: meta
    - get: tools
    - get: pr
      version: every
      trigger: true
    - put: pr
      params:
        path: pr
        status: pending
    - task: test-pr
      privileged: true
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            tag: latest
            username: ((artifacts.username))
            password: ((artifacts.password))
            repository: artifacts.cahcommtech.com/pipeline-tools17
        params:
          BUILD_TYPE:
          GRADLE_BUILD:
          GRADLE_INTEGRATION_TESTS:
          DB_TYPE:
          NEEDS_DB:
          HAS_FLYWAY:
          NEEDS_CONNECT_DB:
          GIT_USERNAME:
          GIT_PASSWORD:
          GIT_REGISTRY_TOKEN:
          NEXUS_USERNAME: ((artifacts.username))
          NEXUS_PASSWORD: ((artifacts.password))
        run:
          path: tools/tasks/run_tests.sh
        inputs:
        - name: tools
        - name: meta
        - name: pr
          path: source
        container_limits:
          memory: 5368709120
        outputs:
        - name: package
        - name: test-output
      params:
        BUILD_TYPE: java
        GRADLE_BUILD: true
        GRADLE_INTEGRATION_TESTS: true
        NEEDS_DB: false
        DB_TYPE:
        HAS_FLYWAY: false
        NEEDS_CONNECT_DB: false
        NEEDS_LEGACY_DB: false
        NEXUS_USERNAME: ((artifacts.username))
        NEXUS_PASSWORD: ((artifacts.password))
        GIT_USERNAME: ((github.username))
        GIT_PASSWORD: ((github.password))
        GIT_REGISTRY_TOKEN: ((concourse-github-access-token))
        ADD_CYPRESS: false
      on_failure:
        put: pr
        params:
          path: pr
          status: failure
      on_success:
        put: pr
        params:
          path: pr
          status: success